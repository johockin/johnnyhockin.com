{
  "site": {
    "title": "Johnny Hockin",
    "description": "Inventor, filmmaker, coder, explorer",
    "url": "https://johnnyhockin.com"
  },
  "explorerLog": [
    {
      "id": "log-001",
      "date": "2025.01.30",
      "content": "Finally pulled the trigger on deleting Workshop Mode from the site. Two CMS systems was one too many. Sometimes the best feature is the one you remove."
    },
    {
      "id": "log-002",
      "date": "2025.01.29",
      "content": "Still Marker hit alpha. Named it after Chris Marker because extracting stills from La Jetée is basically what this tool does. Filmmakers need their frames."
    },
    {
      "id": "log-003",
      "date": "2025.01.28",
      "content": "Maggy's glass UI is either brilliant or insane. Stage lighting in a file transfer app? Why not. If you're going to stare at progress bars, they might as well be beautiful."
    },
    {
      "id": "log-004",
      "date": "2025.01.27",
      "content": "Testing To Don't on myself. Currently 23% accurate at estimating task duration. The app is working perfectly - I'm the bug."
    },
    {
      "id": "log-005",
      "date": "2025.01.26",
      "content": "Realized all my projects are about removing friction. Still Marker removes Premiere. Maggy removes Hedge's price tag. To Don't removes features. Pattern recognized."
    },
    {
      "id": "log-006",
      "date": "2024.01.12",
      "content": "Experimenting with computer vision for detecting hand gestures. OpenCV is overkill for what I need, but the precision is incredible. Managed to get reliable detection at 30fps on the Pi 4. Next: reducing the model size. The real challenge is filtering out false positives when the lighting changes."
    },
    {
      "id": "log-007",
      "date": "2024.01.08",
      "content": "Built a small app to track my daily coding sessions. No fancy frameworks—just vanilla JS and local storage. Sometimes the simplest tools are the most reliable. Total build time: 3 hours. Added a simple pomodoro timer and session analytics. The data is revealing some interesting patterns about my productivity cycles."
    },
    {
      "id": "log-008",
      "date": "2024.01.05",
      "content": "Found an interesting bug in my LED matrix controller. The issue wasn't in the code—it was in my understanding of the hardware timing requirements. PWM frequency was interfering with the refresh rate. Fixed by adjusting the timer prescaler. This kind of debugging is why I love embedded systems—when it works, you know exactly why."
    },
    {
      "id": "log-009",
      "date": "2024.01.02",
      "content": "New year, new experiments. Planning to document everything more thoroughly this time. Raw process notes, not polished blog posts. The goal is authentic documentation of the making process. Started a physical notebook alongside this digital log—there's something about pen and paper for initial sketches that screens can't replicate."
    },
    {
      "id": "log-010",
      "date": "2023.12.28",
      "content": "Finished the first prototype of the gesture-controlled drawing tablet. The latency is still too high for real-time drawing, but the concept works. Using MediaPipe for hand tracking. The breakthrough was realizing I needed to predict gesture completion rather than just detect current state. Machine learning for motion prediction is surprisingly accessible now."
    },
    {
      "id": "log-011",
      "date": "2023.12.25",
      "content": "Christmas hack session: Built a wireless sensor network using ESP32s to monitor temperature and humidity throughout the house. The mesh networking is surprisingly robust. Each node costs about $8 and runs for months on a battery. Data visualization through a simple web interface. Sometimes the best gifts are the ones that solve real problems."
    },
    {
      "id": "log-012",
      "date": "2023.12.20",
      "content": "Discovered that the Arduino IDE has a secret terminal emulator buried in the tools menu. How did I not know this for three years? This changes everything for debugging embedded projects. Also found that you can script the IDE with external tools. The documentation is terrible but the functionality is powerful."
    },
    {
      "id": "log-013",
      "date": "2023.12.15",
      "content": "Built a simple oscilloscope using an ESP32 and a small OLED display. Not accurate enough for serious work, but perfect for understanding signal basics. Cost: $12. The sample rate is limited by the display refresh, but for audio frequency analysis it's surprisingly useful. Added FFT visualization for spectrum analysis."
    },
    {
      "id": "log-014",
      "date": "2023.12.10",
      "content": "Prototyping a modular synthesizer using 3D printed parts and analog circuits. The filter design is based on the Moog ladder filter but simplified for easier construction. Hand-wound inductors using salvaged transformer cores. The sound has that raw, unpredictable quality that digital synths struggle to replicate."
    },
    {
      "id": "log-015",
      "date": "2023.12.05",
      "content": "Started working on a Bluetooth mesh network for home automation. The ESP32 mesh capabilities are impressive but poorly documented. Spent most of the day reading source code to understand the API. Once you get past the learning curve, the possibilities are endless. Planning to use this for distributed sensor monitoring."
    },
    {
      "id": "log-016",
      "date": "2023.11.28",
      "content": "Film project update: Finished editing the documentary about local makers. The story came together better than expected. Used DaVinci Resolve for color grading—the learning curve is steep but the results are professional quality. The film has been accepted to three local festivals. Sometimes the best stories are hiding in plain sight."
    },
    {
      "id": "log-017",
      "date": "2023.11.22",
      "content": "Deep learning experiment: Training a neural network to recognize hand-drawn circuit diagrams and convert them to proper schematics. The initial results are promising but the dataset is small. Need to generate more training data. This could be incredibly useful for rapid prototyping—sketch an idea and get a working schematic instantly."
    },
    {
      "id": "log-018",
      "date": "2023.11.18",
      "content": "Built a custom PCB business card with an embedded microcontroller and LEDs. The gerber files are works of art in themselves. Each card costs about $3 to manufacture but makes an unforgettable impression. Added a simple contact exchange feature—cards can communicate via IR when brought close together. Technology as conversation starter."
    }
  ],
  "projects": [
    {
      "id": "still-marker",
      "title": "Still Marker",
      "description": "macOS app for extracting stills from video",
      "fullDescription": "Named after Chris Marker.\nBuilt because I needed to grab stills from footage without opening Premiere or Resolve.\n\nDrop in your video, it extracts frames at smart intervals.\nFor a 30-second spot, you get 15 frames. For a 10-minute short, you get 40.\nFull resolution, proper color space, no bullshit.\n\nFeatures:\n- Progressive frame loading (no crashes on long videos)\n- Frame refinement (±0.5s coarse, ±1 frame fine)\n- Export all or individual frames\n- Kodak Gold aesthetic because why not\n- Chris Marker-inspired dark interface\n\nLooking for filmmakers to test.\nIt works. It's ready.",
      "image": "images/project-1755009941828.png",
      "category": "Software",
      "date": "2025.01",
      "status": "Alpha",
      "featured": true,
      "metadata": {}
    },
    {
      "id": "maggy",
      "title": "Maggy",
      "description": "DIT software for secure footage transfers",
      "fullDescription": "Hedge costs $299 for copying files and verifying them.\nThat's insane.\n\nMaggy dumps your mags, verifies transfers, manages your queue.\nSequential copying so your drives don't melt.\nBuilt for DITs who just need their footage safe.\n\nCurrent features:\n- Drag cards to destinations (up to 3)\n- Queue all transfers at once\n- SHA-256 verification (xxHash coming)\n- Glass UI with stage lighting (seriously)\n- Smart duplicate detection planned\n\nLooking for brave DITs to test.\nCurrently saving people $299.",
      "image": "images/project-1755009969548.png",
      "category": "Software",
      "date": "2025.01",
      "status": "Alpha",
      "featured": true,
      "metadata": {}
    },
    {
      "id": "to-dont",
      "title": "To Don't",
      "description": "macOS app for tracking personal to-do lists",
      "fullDescription": "I have too many to-do apps.\nThey all have syncing, tagging, reminders, badges, accountability systems. None of them help me get things done. I wanted to join in the chorus of apps that don't help you get things done.\n\nTo Don't is my first Mac app.\nI made it as a design experiment. What are the fewest features that make a to-do list feel right?\nWhy am I so bad at estimating how much time it takes to do anything? Can I create a productivity app that helps me get better at that?\n\nRight now it:\n- Adds tasks, gives them time estimates\n- Starts timer, tracks how long it actually took\n- Star system for triaging tasks\n- Local-only, plaintext files\n- No accounts, no sync, no push notifications\n\nEventually it might:\n- Scoreboard: how accurate are you at guessing your own time?\n- Chart time estimation scores over time\n- Stop being so buggy\n- Allow for multiple to-do lists or sync\n\nIt might never be finished.\nI'm still messing with the textures.\n\nPlanning to release v1 to let people play with it soon.",
      "image": "images/project-1755010027419.png",
      "category": "Software",
      "date": "2024.03",
      "status": "In Progress",
      "featured": true,
      "metadata": {}
    },
    {
      "id": "subway-blind-dates",
      "title": "Subway Canada: Blind Dates",
      "description": "Social experiment / video series",
      "fullDescription": "We put strangers on blind dates in actual subway restaurants.\nSubway wanted 'authentic connection' content.\nWe gave them beautiful awkwardness.\n\nThe premise was simple:\n- Two strangers meet at Subway\n- They order sandwiches together\n- We film what happens\n- No script, just gentle prompting\n\nSome fell in love with the sandwiches.\nSome maybe fell in love with each other.\nMostly people discovered that sharing food with strangers is weird and wonderful.\n\nThe campaign did numbers.\nMore importantly, it was honest.",
      "image": "images/subway-dates-preview.png",
      "category": "Video",
      "date": "2023",
      "status": "Complete",
      "featured": true,
      "metadata": {}
    }
  ],
  "otherProjects": [
    "Automated Plant Watering System",
    "Solar-Powered Weather Station",
    "Arduino-Based Smart Door Lock",
    "LED Strip Audio Visualizer",
    "Custom Macro Keyboard",
    "WiFi Packet Analyzer Tool",
    "Digital Picture Frame with E-Ink",
    "Remote Environmental Monitor",
    "Custom Bluetooth Game Controller",
    "IoT Plant Health Monitor",
    "Programmable LED Badge",
    "Multi-Zone Temperature Logger",
    "Custom Clock with OLED Weather Display",
    "Bluetooth Speaker Amplifier",
    "Motion-Activated Lighting System",
    "Raspberry Pi Security Camera",
    "Custom Drone Flight Controller",
    "Thermal Imaging Camera Interface",
    "Voice-Controlled Home Assistant",
    "CNC Router Control Software",
    "3D Printer Auto-Leveling System",
    "Ham Radio Packet Modem",
    "Solar Panel MPPT Controller",
    "Custom Bench Power Supply",
    "Function Generator with DDS",
    "Logic Analyzer Using FPGA",
    "Real-Time Spectrum Analyzer",
    "Robotic Arm Control System",
    "Machine Learning Edge Device",
    "Custom Synthesizer Sequencer",
    "MIDI to CV Converter",
    "Analog Delay Effect Pedal",
    "Digital Reverb Algorithm",
    "Neural Network Audio Classifier",
    "Real-Time Pitch Correction",
    "Granular Synthesis Engine",
    "Physical Modeling Synthesizer",
    "Interactive Light Installation",
    "Motion Capture System",
    "Computer Vision Object Tracker",
    "Facial Recognition Door System",
    "Gesture-Controlled Drone",
    "Eye-Tracking Mouse Interface",
    "Brain-Computer Interface Experiment",
    "EMG Signal Processing System",
    "Heart Rate Variability Monitor",
    "Sleep Stage Classification",
    "EEG Signal Visualization",
    "Biometric Authentication System",
    "Custom CAD Software Plugin",
    "3D Model Optimization Tool",
    "Parametric Design Generator",
    "Structural Analysis Simulator",
    "Finite Element Mesh Generator",
    "Ray Tracing Renderer",
    "Real-Time Shadow Mapping",
    "Volumetric Lighting Effects",
    "Procedural Texture Generator",
    "Physics Simulation Engine",
    "Particle System Library",
    "Game Engine Audio System",
    "Custom Database Engine",
    "Distributed Computing Framework",
    "Real-Time Data Processing Pipeline",
    "Machine Learning Model Optimizer",
    "Neural Architecture Search Tool",
    "Automated Testing Framework",
    "Code Quality Analysis Tool",
    "Performance Profiling System",
    "Memory Leak Detection Utility",
    "Static Code Analysis Engine",
    "Compiler Optimization Plugin",
    "Custom Programming Language",
    "Domain-Specific Syntax Parser",
    "Interactive Development Environment",
    "Version Control System Extension",
    "Build System Automation Tool",
    "Deployment Pipeline Manager",
    "Container Orchestration System",
    "Microservices Communication Library",
    "API Gateway Implementation",
    "Load Balancer Algorithm",
    "Database Sharding System",
    "Caching Layer Optimization",
    "Message Queue Implementation",
    "Event Streaming Platform",
    "Real-Time Communication Protocol",
    "Blockchain Consensus Algorithm",
    "Cryptocurrency Mining Pool",
    "Smart Contract Verification Tool",
    "Decentralized Storage System",
    "Peer-to-Peer Network Protocol",
    "Cryptographic Hash Function",
    "Digital Signature Implementation",
    "Zero-Knowledge Proof System",
    "Homomorphic Encryption Library",
    "Quantum Key Distribution Simulator",
    "Post-Quantum Cryptography Tools",
    "Side-Channel Attack Detector",
    "Hardware Security Module",
    "Secure Boot Implementation"
  ]
}